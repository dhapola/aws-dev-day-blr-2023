---
apiVersion: v1
kind: Namespace
metadata:
  name: appns


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: foo-app
  namespace: appns
  annotations:
    karpenter.sh/provisioner: demoapp
  labels:
    app: foo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: foo-app
  template:
    metadata:
      labels:
        app: foo-app
    spec:
      terminationGracePeriodSeconds: 0
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
                  - arm64
              - key: kubernetes.io/os
                operator: In
                values: ["linux"]
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "topology.kubernetes.io/zone"
        - maxSkew: 1
          topologyKey: "kubernetes.io/arch"
          whenUnsatisfiable: ScheduleAnyway

      containers:
        - name: foo-container
          imagePullPolicy: Always
          image: xxxxxxxxx.dkr.ecr.ap-south-1.amazonaws.com/foobar:foobar.0.2
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 600m
              memory: "256Mi"
            limits:
              cpu: 800m
              memory: "512Mi"
          ports:
            - containerPort: 8080

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: foobar-hpa
  namespace: appns
spec:
  # pods that will be scaled
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: foo-app

  minReplicas: 1
  maxReplicas: 100

  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization

  behavior:
    scaleUp:
      stabilizationWindowSeconds: 15
      policies:
      - type: Pods
        value: 1
        periodSeconds: 10

    scaleDown:
      stabilizationWindowSeconds: 30
      policies:
      - type: Pods
        value: 1
        periodSeconds: 15


---
apiVersion: v1
kind: Service
metadata:
  name: foo-app-svc
  namespace: appns
spec:

  ports:
    - port: 8080
  selector:
    app: foo-app

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: foobar-ingress
  namespace: appns
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=test,Team=test
    alb.ingress.kubernetes.io/target-type: 'ip'
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: foo-app-svc
                port:
                  number: 8080
